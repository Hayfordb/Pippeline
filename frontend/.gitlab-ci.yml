stages:
  - build
  - test
  - notify

build-frontend-code-job:
  stage: build
  script:        
    - cd frontend
    - npm install
    - npm run build
  after_script: 
    - echo "JOB_ID=$CI_JOB_ID" >> job.env
  rules: 
    - changes: 
      - frontend/**/*
  artifacts:
    paths: 
      - frontend/dist/frontend/
    reports:
      dotenv:
        job.env

sonarqube-frontend-sast:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd frontend
    - |
      sonar-scanner \
      -Dsonar.qualitygate.wait=true \
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONT} \
      -Dsonar.host.url=${SONARQUBE_URL} \
      -Dsonar.login=${SONAR_LOGIN_FRONTEND} \
      -Dsonar.sources=. \
  needs:
    - build-frontend-code-job

telegram-notification-frontend:
  stage: notify
  script: 
    - 'curl -X POST -H "Content-Type: application/json" -d "{\"chat_id\": \"-1002218066565\", \"text\": \"Cергей Федотов собрал frontend. Артефакты по ссылке: $CI_PROJECT_URL/-/jobs/$JOB_ID/artifacts/download?job=$CI_JOB_NAME\"}" https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage'
  needs:
    - build-frontend-code-job
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /send notification/
      changes: 
        - frontend/**/*
